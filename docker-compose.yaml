networks:
   my-network: 
    driver: bridge

services:
  

    db:
      image: postgres:17
      container_name: postgres_conta
      environment:
        DB_HOST: db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: postgres
      healthcheck:
       test: ["CMD-SHELL", "pg_isready -U postgres"]
       interval: 5s
       timeout: 3s
       retries: 10  
      ports:
      - "5432:5432"
      restart: unless-stopped
      volumes:
      - pgdata:/var/lib/postgresql/data
      networks:
      - my-network



    app:
     build:
      context: .
      dockerfile: Dockerfile 
     env_file:
      - .env
     networks:
      - my-network
     ports:
     - "8080:8080"
     restart: unless-stopped
     command: ["./spy-cat-agency"]
     depends_on:
        db:
         condition: service_healthy
   

volumes:
  pgdata:
